"use strict";(self.webpackChunkminima_docs=self.webpackChunkminima_docs||[]).push([[27],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(n),c=r,k=u["".concat(s,".").concat(c)]||u[c]||m[c]||l;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6712:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:3},i="Start a Private Node",o={unversionedId:"buildonminima/dapptutorial/startaprivatenode",id:"buildonminima/dapptutorial/startaprivatenode",title:"Start a Private Node",description:"For development purposes, it can be useful to run one or more private test nodes stimulating network traffic. Starting these nodes from Genesis will also give you 1 billion coins to test transactions with.",source:"@site/docs/buildonminima/dapptutorial/startaprivatenode.md",sourceDirName:"buildonminima/dapptutorial",slug:"/buildonminima/dapptutorial/startaprivatenode",permalink:"/docs/buildonminima/dapptutorial/startaprivatenode",draft:!1,editUrl:"https://github.com/minima-global/minidocs/docs/buildonminima/dapptutorial/startaprivatenode.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Pre-requisites",permalink:"/docs/buildonminima/dapptutorial/prerequisites"},next:{title:"MiniDapp Hub",permalink:"/docs/buildonminima/dapptutorial/accesshub"}},s={},p=[{value:"Optional start up parameters",id:"optional-start-up-parameters",level:4},{value:"General",id:"general",level:4},{value:"Folders",id:"folders",level:4},{value:"MiniDapp System (mds)",id:"minidapp-system-mds",level:4},{value:"RPC",id:"rpc",level:4},{value:"Test nodes",id:"test-nodes",level:4},{value:"Mobile",id:"mobile",level:4},{value:"Debugging",id:"debugging",level:4},{value:"Help",id:"help",level:4}],d={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"start-a-private-node"},"Start a Private Node"),(0,r.kt)("p",null,"For development purposes, it can be useful to run one or more private test nodes stimulating network traffic. Starting these nodes from Genesis will also give you 1 billion coins to test transactions with. "),(0,r.kt)("p",null,"To start a private node from genesis:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Node 1:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"java -jar minima.jar -data minidata1 -basefolder minidata1 -test -nop2p -mdsenable -mdspassword INSERTNODE1PASSWORD -genesis\n")),(0,r.kt)("p",null,"This will start a node on the default ports of 9001-5. "),(0,r.kt)("p",null,"To create a second node to test transactions between two nodes"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Node 2:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"java -jar minima.jar -data minidata2 -basefolder minidata2 -test -nop2p -clean -mdsenable -mdspassword INSERTNODE2PASSWORD -port 10001 -connect 127.0.0.1:9001\n")),(0,r.kt)("p",null,"If you need to quit Minima and wish to restart it without deleting old data, use:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Node 1:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"java -jar minima.jar -data minidata1 -basefolder minidata1 -test -nop2p -mdsenable -mdspassword INSERTNODE1PASSWORD\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Node 2:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"java -jar minima.jar -data minidata2 -basefolder minidata2 -test -nop2p -mdsenable -mdspassword INSERTNODE2PASSWORD -connect 127.0.0.1:9001\n")),(0,r.kt)("admonition",{title:"Parameters used",type:"note"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"-data [foldername/path]"))," : the data folder where all the config files for this node are stored. Default is a hidden .minima folder under the user's home directory. If you want to specify a folder not in the user's home directory, you must use the complete path.",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"-basefolder [foldername/path]"))," : specify a default file creation / backup / restore folder. Default is the user's home directory. Can be the same as the data folder provided.",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"-nop2p"))," : Disable the automatic P2P system",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"-test"))," : uses test parameters e.g. faster block times",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"-genesis"))," : start the node from the genesis block (automatically uses -clean)",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"-mdsenable"))," : start the MiniDapp system"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"-connect [ip:port]"))," : Disable the automatic P2P system and create your own network by manually connecting to this list of host:port",(0,r.kt)("br",null)))),(0,r.kt)("h4",{id:"optional-start-up-parameters"},"Optional start up parameters"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Expand to see full list of start up parameters"),(0,r.kt)("p",null,"The following start up parameters can optionally be specified when starting your node. "),(0,r.kt)("p",null,"To add/remove parameters after a node has been started, you must ",(0,r.kt)("inlineCode",{parentName:"p"},"quit")," the node and restart it, adding/removing the required parameters. "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"[]")," square brackets indicate where an input is required, ",(0,r.kt)("strong",{parentName:"p"},"the brackets should not be included.")),(0,r.kt)("h4",{id:"general"},"General"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-clean")," : CAREFUL! Clears existing data, starts a new fresh node. All coins will be lost.",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-port [port]")," : specify the initial port for Minima to use. Range used will be the specified port +4. Default is 9001-9005.",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-host [ipaddress]")," : specify the host IP",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-dbpassword [yourdbpassword]")," : Main Wallet / SQL AES password - MUST be specified on first launch. ",(0,r.kt)("strong",{parentName:"li"},"CANNOT be changed later.")," ",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-allowallip")," : Allow all IPs for Maxima / Networking. Local IPs won't be allowed otherwise.",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-archive")," : Run an Archive node - store all archive data / the cascade to allow for resyncs from this node",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-daemon")," : Run in daemon mode with no stdin input (if running Minima as a background service)",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-isclient")," : Tells the P2P System that this node can't accept incoming connections",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-server")," : Use Server settings - this node can accept incoming connections",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-desktop")," : Use Desktop settings - this node can't accept incoming connections",(0,r.kt)("br",null))),(0,r.kt)("h4",{id:"folders"},"Folders"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-data [foldername/path]")," : the data folder where all the config files for this node are stored. Default is a hidden .minima folder under the user's home directory. If you want to specify a folder not in the user's home directory, you must use the complete path. ",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-basefolder [foldername/path]")," : specify a default file creation / backup / restore folder. Default is the user's home directory. Can be the same as the ",(0,r.kt)("inlineCode",{parentName:"li"},"data")," folder provided.",(0,r.kt)("br",null))),(0,r.kt)("h4",{id:"minidapp-system-mds"},"MiniDapp System (mds)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-mdsenable")," : enable the MiniDapp System (default port 9003)",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-mdspassword [yourmdspassword]")," : specify the mds login password ",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-mdsinit [foldername/path]")," : specify a folder of miniDAPPs",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-mdswrite [minidapp]")," : give an initial miniDAPP WRITE access ",(0,r.kt)("br",null))),(0,r.kt)("h4",{id:"rpc"},"RPC"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-rpcenable")," : enable remote procedure call",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-rpcssl")," : use Self Signed SSL cert to run RPC",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-rpcpassword [yourrpcpassword]")," : set Basic Auth password for RPC calls ( Use with SSL / stunnel ). Only secure if used with SSL.",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-rpcclrf")," : use CRLF at the end of the RPC headers (NodeJS)",(0,r.kt)("br",null))),(0,r.kt)("h4",{id:"test-nodes"},"Test nodes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-genesis")," : start the node from the genesis block (automatically uses -clean)",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-test")," : uses test parameters e.g. faster block times",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-connect [ip:port,ip:port]")," : Disable the automatic P2P system and create your own network by manually connecting to this list of host:port",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-nop2p")," : Disable the automatic P2P system",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-noconnect")," : Stops the P2P system from connecting to other nodes until it has been connected to",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-nosyncibd")," : Do not sync IBD (for testing)",(0,r.kt)("br",null))),(0,r.kt)("h4",{id:"mobile"},"Mobile"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-mobile")," : Sets this device to a mobile device - used for metrics only",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-limitbandwidth")," : Limit the amount sent for archive sync",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-noshutdownhook")," : Do not use the shutdown hook (Android)",(0,r.kt)("br",null))),(0,r.kt)("h4",{id:"debugging"},"Debugging"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-p2p-log-level-info")," : Set the P2P log level to info",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-p2p-log-level-debug")," : Set the P2P log level to debug")),(0,r.kt)("h4",{id:"help"},"Help"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-showparams")," : Show relevant startup params on launch",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-help")," : print help for the start up parameters"))))}m.isMDXComponent=!0}}]);