"use strict";(self.webpackChunkminima_docs=self.webpackChunkminima_docs||[]).push([[1275],{9963:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var i=t(5893),o=t(1151);const s={sidebar_position:5},r="ELTOO Pre-Coin Txn",a={id:"buildonminima/txntutorial/layer2/eltooprecoin",title:"ELTOO Pre-Coin Txn",description:"Creating a transaction that spends an as yet created coin is not as tricky as it sounds.",source:"@site/docs/buildonminima/txntutorial/layer2/eltooprecoin.md",sourceDirName:"buildonminima/txntutorial/layer2",slug:"/buildonminima/txntutorial/layer2/eltooprecoin",permalink:"/docs/buildonminima/txntutorial/layer2/eltooprecoin",draft:!1,unlisted:!1,editUrl:"https://github.com/minima-global/minidocs/docs/buildonminima/txntutorial/layer2/eltooprecoin.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"ELTOO Channel",permalink:"/docs/buildonminima/txntutorial/layer2/eltoo"},next:{title:"ELTOO Floating Coin",permalink:"/docs/buildonminima/txntutorial/layer2/eltoofloating"}},d={},c=[];function l(n){const e={code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"eltoo-pre-coin-txn",children:"ELTOO Pre-Coin Txn"}),"\n",(0,i.jsx)(e.p,{children:"Creating a transaction that spends an as yet created coin is not as tricky as it sounds."}),"\n",(0,i.jsx)(e.p,{children:"Create 2 new addresses and send some funds to the first."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"newaddress;newaddress\n"})}),"\n",(0,i.jsxs)(e.p,{children:["Note that you can chain functions with ",(0,i.jsx)(e.strong,{children:";"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"send amount:1 address:0x0BD4C2C80609CA63CAF5B004037E6F4F1A4A56F97904B6C1B791802C2F13E504\n"})}),"\n",(0,i.jsx)(e.p,{children:"Now create transaction spending that input.. sending 1 Minima to the other new output.."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"txncreate id:pretxn\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"txnoutput id:pretxn amount:1 address:0x01C0771C94D680E2E6CADA900D28061223E383EAF9646CA7F045209907D81DA7\n"})}),"\n",(0,i.jsx)(e.p,{children:"To find the input coin use:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"coins relevant:true\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"txninput id:pretxn coinid:0x2156B370A764DFB7D25B8A2F71305B9BECAE6A804E076A0333DF0645C2449CB3\n"})}),"\n",(0,i.jsx)(e.p,{children:"You should now have an unsigned transaction with 1 Minima coin input and 1 Minima coin output."}),"\n",(0,i.jsx)(e.p,{children:"You can sign it automagically - since the inputs are 'simple' with"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"txnsign id:pretxn publickey:auto\n"})}),"\n",(0,i.jsx)(e.p,{children:"Now we have a fully valid transaction but have not posted it yet."}),"\n",(0,i.jsx)(e.p,{children:"Let's create a transaction that spends the output. This is important as the signatures will be dependent on the coinid used in the previous transaction, so any changes will mean they will be invalid."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"txncreate id:posttxn\n"})}),"\n",(0,i.jsx)(e.p,{children:"You will see that when you do 'txnlist'.. the last piece of data in the JSON is 'outputcoindata'. This is a HEX representation of the coin outputs and can be used as an input to another transaction - with the correct CoinID. Copy that and use it like so.."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"txninput id:posttxn coindata:0x0000002015B0B62181547D83C563D8B1925B53655A2A8F7FF8B1F7479FB202829B89838200000001FF0001060000000100000100010000000001000000010000010000\n"})}),"\n",(0,i.jsx)(e.p,{children:"And add an output to 0xFF.. Just for giggles."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"txnoutput id:posttxn address:0xFF amount:1\n"})}),"\n",(0,i.jsx)(e.p,{children:"Sign the post transaction.."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"txnsign id:posttxn publickey:auto\n"})}),"\n",(0,i.jsx)(e.p,{children:"We now have a transaction that cannot be changed, as the signatures would be invalid, using a coin that does not currently exist.\r\nLet's post the FIRST 'pretxn'"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"txnpost id:pretxn auto:true\n"})}),"\n",(0,i.jsx)(e.p,{children:"You will need to wait for it to confirm. Use 'balance' to see."}),"\n",(0,i.jsx)(e.p,{children:"And once you have all the funds - the change and the coin you just sent - let's post the second 'post' transaction."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"txnpost id:posttxn auto:true\n"})}),"\n",(0,i.jsx)(e.p,{children:"If all went well - that should all work and the final result is 1 Minima sent to 0xFF!.."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Well Done!"})}),"\n",(0,i.jsx)(e.p,{children:"You may have to delete old transactions, using txndelete, if you don't need them anymore.."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"txndelete id:pretxn;txndelete id:posttxn\n"})}),"\n",(0,i.jsx)(e.p,{children:"The next ability we will look at is a 'floating' coin."})]})}function h(n={}){const{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(l,{...n})}):l(n)}},1151:(n,e,t)=>{t.d(e,{Z:()=>a,a:()=>r});var i=t(7294);const o={},s=i.createContext(o);function r(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);