"use strict";(self.webpackChunkminima_docs=self.webpackChunkminima_docs||[]).push([[3761],{4616:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var i=t(5893),s=t(1151);const o={sidebar_position:11},a="MultiSig MultiCoin",r={id:"buildonminima/txntutorial/layer1/multisigmulticoin",title:"MultiSig MultiCoin",description:"Lets now try a more complex but more powerful exchange contract.",source:"@site/docs/buildonminima/txntutorial/layer1/multisigmulticoin.md",sourceDirName:"buildonminima/txntutorial/layer1",slug:"/buildonminima/txntutorial/layer1/multisigmulticoin",permalink:"/docs/buildonminima/txntutorial/layer1/multisigmulticoin",draft:!1,unlisted:!1,editUrl:"https://github.com/minima-global/minidocs/docs/buildonminima/txntutorial/layer1/multisigmulticoin.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"Flash Cash",permalink:"/docs/buildonminima/txntutorial/layer1/flashcash"},next:{title:"MAST Contracts",permalink:"/docs/buildonminima/txntutorial/layer1/mastcontract"}},d={},c=[];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"multisig-multicoin",children:"MultiSig MultiCoin"}),"\n",(0,i.jsx)(n.p,{children:"Lets now try a more complex but more powerful exchange contract."}),"\n",(0,i.jsx)(n.p,{children:"2 users are negotiating the price of a certain amount of tokens or an NFT."}),"\n",(0,i.jsx)(n.p,{children:"They do this over a chat app ( MaxSolo/MaxChat ) and send offers backwards and forwards to each other.. All off chain. When they finally agree on a price.. what they would like is to construct a transaction that takes the Tokens and Minima as inputs ( one party does one of each ) and then sends those 'coins' to the correct recipient."}),"\n",(0,i.jsx)(n.p,{children:"All of this can be checked and validated by each user before either signs the transaction so that the swap itself is atomic, trustless and secure. Either they both get what they want or it doesn't happen."}),"\n",(0,i.jsx)(n.p,{children:"These types of offers could be collected together in a pool, or shared with other users, to allow for a completely decentralised exchange dynamic."}),"\n",(0,i.jsx)(n.p,{children:"Let's go through the steps to construct this transaction."}),"\n",(0,i.jsx)(n.p,{children:"I have 2 instances of Minima running. I have created an NFT token on one of them."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"tokencreate name:mynft amount:1 decimals:0\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now the other user wishes to buy this off me for 10 Minima."}),"\n",(0,i.jsxs)(n.p,{children:["To remove the need to worry about change the other user creates a 10 Minima coin by using ",(0,i.jsx)(n.code,{children:"getaddress"})," and then sending 10 Minima to his own address. (Normally you wouldn't do this and just send the change back to yourself when constructing the transaction)"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"send amount:10 address:0x0AC281E79A096F046A1FAEF17D268BCF6D5DA604F533F3C64FE84F079C775FCE\n"})}),"\n",(0,i.jsx)(n.p,{children:"So we now have 2 coins, 1 on each Instance of Minima, and we want to create a transaction that spends them both and sends them to the other party.."}),"\n",(0,i.jsx)(n.p,{children:"The user who owns the NFT starts by creating a transaction:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"txncreate id:swap\n"})}),"\n",(0,i.jsx)(n.p,{children:"He then gets one of his addresses and adds an output paying him 10 Minima."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"txnoutput id:swap address:Mx1W5E6AESNJG687D8GZC2JF9DZVVA3WE3TUW9PGWRRRCM32YV1BKMPRR2VY amount:10 tokenid:0x00\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"Note that I use the Mx.. style address!.. This is a special address format (converted before used - you can't use them in Scripts) that takes the original 0x.. HEX address, hashes it, adds the first 4 bytes of the hash as a checksum to the end and then converts the whole thing to Base32. This way you have basic error checking so you can't input an invalid address and the size remains less than before."})}),"\n",(0,i.jsxs)(n.p,{children:["He then finds his NFT ( 'coins' is the same as 'coins relevant",":true","')"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"coins\n"})}),"\n",(0,i.jsxs)(n.p,{children:["And adds the coin as an input.. Note the use of ",(0,i.jsx)(n.code,{children:"scriptmmr"}),"!"]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["This next part may require you to export & import the coin proof. Read the ",(0,i.jsx)(n.a,{href:"/docs/buildonminima/txntutorial/pruning",children:(0,i.jsx)(n.strong,{children:"Pruning"})}),"\r\nsection to learn more."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"txninput id:swap coinid:0x5869DDC397979D9529AD92658C0FACC183D94F3E23F7E8028E02B183DE2FAB8B scriptmmr:true\n"})}),"\n",(0,i.jsx)(n.p,{children:"This adds the coin and the script and MMR proof. But it is not yet signed.. Since the transaction is not yet complete."}),"\n",(0,i.jsx)(n.p,{children:"Export the transaction and let the other user import it. We have not signed it so the transaction is still small.. We can just copy paste the data without going via a file.."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"txnexport id:swap\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now the other user imports it.. Again just using the data.. This works well over RPC but the command line has a limit - which is why you would use files for larger signed transactions."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"txnimport data:0xn"})}),"\n",(0,i.jsx)(n.p,{children:"Gets an address for himself.. And adds an output sending the NFT to himself."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"txnoutput id:swap address:Mx3H6YQPJT9UW2UYAWFZSD2635WWPREEUABBFWY2UYH4Y1BFQZJ91W8JK3SJ amount:1 tokenid:0x02C30D6CD58E0230481C0A5075E40A837EDEA7331F7423BA4AE8073156231884\n"})}),"\n",(0,i.jsx)(n.p,{children:"And finally adds the 10 Minima input.. Which he finds with coins again.."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"txninput id:swap coinid:0x84352ECF59CAC79103C07254B5158AF8560DE68F609A346154FA812F0051A scriptmmr:true\n"})}),"\n",(0,i.jsx)(n.p,{children:"OK - almost there.. We need to sign it now.."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"txnsign id:swap publickey:auto\n"})}),"\n",(0,i.jsx)(n.p,{children:"NOW - export that.. via a file.. The signature makes it too large for command line copy paste.."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"txnexport id:swap file:swap.txn\n"})}),"\n",(0,i.jsx)(n.p,{children:"Back on the other instance of Minima.. Import the Txn.."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"txnimport file:swap.txn\n"})}),"\n",(0,i.jsx)(n.p,{children:"NOW - CHECK the transaction is as you would want it.. And sign it.."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"txnsign id:swap publickey:auto\n"})}),"\n",(0,i.jsx)(n.p,{children:"And.. finally - post it.."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"txnpost id:swap\n"})}),"\n",(0,i.jsx)(n.p,{children:".. And like that - It's done."}),"\n",(0,i.jsx)(n.p,{children:"You just performed a trustless atomic secure token swap! Well done.."}),"\n",(0,i.jsx)(n.p,{children:"It may seem slow and clunky to type this all in by hand but this entire exchange of contracts would take less than a second when automated."}),"\n",(0,i.jsx)(n.p,{children:"This procedure allows for truly secure peer 2 peer exchanges to take place and can be used as a base unit for many other interesting products, such as a DEX, trading pit, liquidity pools etc etc.. With all the negotiation / order book management done off chain."})]})}function l(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>a});var i=t(7294);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);