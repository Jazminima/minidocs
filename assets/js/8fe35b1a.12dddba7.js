"use strict";(self.webpackChunkminima_docs=self.webpackChunkminima_docs||[]).push([[2425],{6951:(s,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>d});var r=n(5893),i=n(1151);const t={sidebar_position:5},o="Terminal Commands",a={id:"userguides/usingyournode/terminal_commands",title:"Terminal Commands",description:"The following commands can be run directly from a Minima Terminal. They can also be viewed by typing help into the Minima Terminal.",source:"@site/docs/userguides/usingyournode/terminal_commands.md",sourceDirName:"userguides/usingyournode",slug:"/userguides/usingyournode/terminal_commands",permalink:"/docs/userguides/usingyournode/terminal_commands",draft:!1,unlisted:!1,editUrl:"https://github.com/minima-global/minidocs/docs/userguides/usingyournode/terminal_commands.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Log Messages",permalink:"/docs/userguides/usingyournode/logs"},next:{title:"Your profile",permalink:"/docs/userguides/usingmaxima/yourprofile"}},l={},d=[{value:"General",id:"general",level:2},{value:"Backup",id:"backup",level:2},{value:"MiniDapp System",id:"minidapp-system",level:2},{value:"Network",id:"network",level:2},{value:"Maxima",id:"maxima",level:2},{value:"Scripts",id:"scripts",level:2},{value:"Search",id:"search",level:2},{value:"Send",id:"send",level:2},{value:"Signatures",id:"signatures",level:2},{value:"Transactions",id:"transactions",level:2}];function c(s){const e={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,i.a)(),...s.components},{Details:n}=e;return n||function(s,e){throw new Error("Expected "+(e?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"terminal-commands",children:"Terminal Commands"}),"\n",(0,r.jsxs)(e.p,{children:["The following commands can be run directly from a Minima Terminal. They can also be viewed by typing ",(0,r.jsx)(e.code,{children:"help"})," into the Minima Terminal."]}),"\n",(0,r.jsxs)(e.p,{children:["For detailed help, use ",(0,r.jsx)(e.code,{children:"help command:"})," followed by the command."]}),"\n",(0,r.jsxs)(e.p,{children:["; can be used to chain multiple commands",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(e.h2,{id:"general",children:"General"}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"balance"}),(0,r.jsx)("br",{}),"Show your total balance of Minima and tokens."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"address:"})," (optional)\r\nShow the balance for a specific 0x or Mx address."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"tokenid:"})," (optional)\r\nShow the balance for a specific tokenid. Minima is 0x00."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"confirmations:"})," (optional)\r\nSet the number of block confirmations required before a coin is considered confirmed in your balance. Default is 3."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"balance"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"balance tokenid:0xFED5.. confirmations:10"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"balance address:0xFF.."})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"block"}),(0,r.jsx)("br",{}),"Return the top block"]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Examples:"}),"\r\n",(0,r.jsx)(e.em,{children:"block"})]})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"checkaddress"}),(0,r.jsx)("br",{}),"Check the validity of an address and whether it belongs to your node."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"address:"}),(0,r.jsx)("br",{}),"\r\nThe 0x or Mx address to check."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"checkaddress address:0xFED..."})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"coincheck"}),(0,r.jsx)("br",{}),"Check a coin exists and is valid. Can only check unspent coins."]}),(0,r.jsx)(e.p,{children:"Returns the coin details and whether the MMR proof is valid."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"data:"}),(0,r.jsx)("br",{}),"\r\nThe data of a coin. Can be found using the 'coinexport' command."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"coincheck data:0x00000.."})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"coinexport"}),(0,r.jsx)("br",{}),"Export a coin including its MMR proof."]}),(0,r.jsx)(e.p,{children:"A coin can then be imported and tracked on another node using the 'coinimport' command."}),(0,r.jsx)(e.p,{children:"This does not allow the spending of a coin - just the knowledge of its existence."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"coinid:"}),(0,r.jsx)("br",{}),"\r\nThe id of a coin. Can be found using the 'coins' command."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"coinexport coinid:0xCD34.."})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"coinimport"}),(0,r.jsx)("br",{}),"Import a coin including its MMR proof."]}),(0,r.jsx)(e.p,{children:"Optionally you can track the coin to add it to your relevant coins list and know when it becomes spent."}),(0,r.jsx)(e.p,{children:"Importing does not allow the spending of a coin - just the knowledge of its existence."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"data:"}),(0,r.jsx)("br",{}),"\r\nThe data of a coin. Can be found using the 'coinexport' command."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"track:"})," (optional)",(0,r.jsx)("br",{}),"\r\ntrue or false, true will create an MMR entry for the coin and add it to your relevant coins."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"coinimport data:0x00000.."})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"cointrack"}),(0,r.jsx)("br",{}),"Track or untrack a coin."]}),(0,r.jsx)(e.p,{children:"Track a coin to keep its MMR proof up-to-date and know when it becomes spent. Stop tracking to remove it from your relevant coins list."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"enable:"}),"\r\ntrue or false, true will add the coin to your relevant coins, false will remove it from your relevant coins."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"coinid:"}),"\r\nThe id of a coin. Can be found using the 'coins' command."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["cointrack enable",":true"," coinid:0xCD34.."]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"consolidate"}),(0,r.jsx)("br",{})," Consolidate multiple coins (UTxOs) into one by sending them back to yourself."]}),(0,r.jsx)(e.p,{children:"Must have at least 3 coins."}),(0,r.jsx)(e.p,{children:"Useful to prevent having many coins of tiny value and to manage the number of coins you are tracking. Optionally set the minimum coin age (in blocks), maximum number of coins, and maximum number of signatures for the transaction."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"tokenid:"}),(0,r.jsx)("br",{}),"\r\nThe tokenid for Minima or custom token to consolidate coins for. Minima is 0x00."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"coinage:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe minimum number of blocks deep (confirmations) a coin needs to be. Default is 3."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"maxcoins:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe maximum number of coins to consolidate. Minimum 3, up to 20. Coins are first sorted by value (smallest first) before adding to the transaction."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"maxsigs:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe maximum number of signatures for the transaction, up to 5. Coins are then sorted by address to minimize the number of signatures required."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"burn:"})," (optional)",(0,r.jsx)("br",{}),"\r\nAmount of Minima to burn with the transaction."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"debug:"})," (optional)",(0,r.jsx)("br",{}),"\r\ntrue or false, true will print more detailed logs."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"dryrun:"})," (optional)",(0,r.jsx)("br",{}),"\r\ntrue or false, true will simulate the consolidate transaction but not execute it."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"consolidate tokenid:0x00"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"consolidate tokenid:0x77.. coinage:10"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"consolidate tokenid:0x00 maxcoins:5"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"consolidate tokenid:0x00 coinage:10 maxcoins:8 burn:1"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["consolidate tokenid:0x00 coinage:10 maxcoins:8 maxsigs:3 burn:1 dryrun",":true"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"getaddress"}),(0,r.jsx)("br",{}),"Returns an existing default Minima address to receive funds, use as a change address etc."]}),(0,r.jsx)(e.p,{children:"Each address can be used securely 262144 (64^3) times."}),(0,r.jsx)(e.p,{children:"Then you can wipe the private keys from your online node using the 'vault' command."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Examples:"}),"\r\n",(0,r.jsx)(e.em,{children:"getaddress"})]})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"hashtest"}),(0,r.jsx)("br",{}),"Check the speed of hashing of this device."]}),(0,r.jsx)(e.p,{children:"Defaults to 1 million hashes."}),(0,r.jsx)(e.p,{children:"Returns the time taken in milliseconds and speed in megahashes/second."}),(0,r.jsx)(e.p,{children:"E.g. A speed of 0.5 MH/s indicates 500000 hashes per second."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"amount:"})," (optional)",(0,r.jsx)("br",{}),"\r\nNumber of hashes to execute."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"hashtest"})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"history"}),(0,r.jsx)("br",{}),"Return all TxPoW relevant to you."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"max:"})," (optional)",(0,r.jsx)("br",{}),"\r\nMaximum number of TxPoW to retrieve."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"history"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"history max:20"})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"keys"}),(0,r.jsx)("br",{}),"Get a list of all your public keys or create a new key."]}),(0,r.jsx)(e.p,{children:"Each public key can be used for signing securely 262144 (64^3) times."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"action:"})," (optional)",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"list"})," : List your existing public keys. The default.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"checkkeys"})," : Checks if your Public and Private keys are correct.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"new"})," : Create a new key pair.",(0,r.jsx)("br",{})]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"publickey:"})," (optional)",(0,r.jsx)("br",{}),"\r\nSearch for a specific public key."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"keys"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["keys action",":list"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["keys action",":checkkeys"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["keys action",":list"," publickey:0xFFEE56.."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["keys action",":new"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"newaddress"}),(0,r.jsx)("br",{}),"Create a new address that will not be not used for anything else (not one of the 64 default change address)."]}),(0,r.jsx)(e.p,{children:"Can be used for a specific use case or for improved privacy."}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"newaddress"})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"printmmr"}),(0,r.jsx)("br",{}),"Print the MMR set of the tip block and the total number of entries in the MMR. "]}),(0,r.jsx)(e.p,{children:"Returns the tip block number, latest entrynumber and latest set of MMR entries."}),(0,r.jsx)(e.p,{children:"For each entry, details of its row, entry number, data and value of all new and updated MMR entries for the tip block."}),(0,r.jsx)(e.p,{children:"Row 1 represents the leaf nodes, entry 0 represents the first entry on a row."}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"printmmr"})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"printtree"}),(0,r.jsx)("br",{}),"Print a tree representation of the blockchain."]}),(0,r.jsx)(e.p,{children:"Default depth 32 blocks, can be increased to see more of the txpow tree."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"depth:"})," (optional)",(0,r.jsx)("br",{}),"\r\nNumber of blocks back from the tip to show in the txpow tree."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"cascade:"})," (optional)",(0,r.jsx)("br",{}),"\r\ntrue or false, true shows the cascade."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"printtree"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"printtree depth:500"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["printtree cascade",":true"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"quit"}),(0,r.jsx)("br",{}),"Shutdown Minima safely. "]}),(0,r.jsx)(e.p,{children:"Ensure you have a backup before shutting down."}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"quit"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["quit compact",":true"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"status"}),(0,r.jsx)("br",{}),"Show the general status for Minima and your node. Optionally clean the RAM."]}),(0,r.jsx)(e.p,{children:"Prints details for general status, memory used, chain info, stored txpow units, network connections, p2p connections and traffic."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"clean:"})," (optional)",(0,r.jsx)("br",{}),"\r\ntrue only, clear the RAM."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"status"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["status clean",":true"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"tokencreate"}),(0,r.jsx)("br",{}),"Create (mint) custom tokens or NFTs."]}),(0,r.jsx)(e.p,{children:"You must have some sendable Minima in your wallet as tokens are 'colored coins', a fraction of 1 Minima."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"name:"}),(0,r.jsx)("br",{}),"\r\nThe name of the token. Can be a string or JSON Object."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"amount:"}),(0,r.jsx)("br",{}),"\r\nThe amount of total supply to create for the token. Between 1 and 1 Trillion."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"decimals:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe number of decimal places for the token. Default is 8, maximum 16.\r\nTo create NFTs, use 0."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"script:"})," (optional)",(0,r.jsx)("br",{}),"\r\nAdd a custom script that must return 'TRUE' when spending any coin of this token.",(0,r.jsx)("br",{}),"\r\nBoth the token script and coin script must return 'TRUE' for a coin to be sendable."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"state:"})," (optional)",(0,r.jsx)("br",{}),'\r\nList of state variables, if adding a script. A JSON object in the format {"port":"value",..}']}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"signtoken:"})," (optional)",(0,r.jsx)("br",{}),"\r\nProvide a public key to sign the token with. Useful for proving you are the creator of the token/NFT."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"webvalidate:"})," (optional)",(0,r.jsx)("br",{}),"\r\nProvide a URL to a publicly viewable .txt file you are hosting which stores the tokenid for validation purposes.",(0,r.jsx)("br",{}),"\r\nCreate the file in advance and get the tokenid after the token has been minted."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"burn:"})," (optional)",(0,r.jsx)("br",{}),"\r\nAmount to burn with the tokencreate minting transaction."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["tokencreate name",":newtoken"," amount:1000000"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:['tokencreate amount:10 name:{"name":"newcoin","link":"http',":mysite",'.com","description":"A very cool token"}']})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["tokencreate name",":mynft"," amount:10 decimals:0 webvalidate:",(0,r.jsx)(e.a,{href:"https://www.mysite.com/nftvalidation.txt",children:"https://www.mysite.com/nftvalidation.txt"})," signtoken:0xFF.. burn:0.1"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["tokencreate name",":charitycoin",' amount:1000 script:"ASSERT VERIFYOUT(@TOTOUT-1 0xMyAddress 1 0x00 TRUE)"']})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"tokenvalidate"}),(0,r.jsx)("br",{}),"Validate the signature and webvalidate link in a token."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"tokenid:"}),(0,r.jsx)("br",{}),"\r\nThe tokenid of the custom token/NFT to validate."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"tokenvalidate tokenid:0xFED5.."})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"trace"}),(0,r.jsx)("br",{}),"Show the message stacks of the internal Minima Engine with optional filter string."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"enable:"}),(0,r.jsx)("br",{}),"\r\ntrue or false, true to enable or false to disable."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"filter:"})," (optional)",(0,r.jsx)("br",{}),"\r\nA case-sensitive string to filter the messages by."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["trace enable",":true"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["trace enable",":true"," filter",":MAIN"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["trace enable",":true"," filter",":MINER"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["trace enable",":true"," filter",":MDS"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["trace enable",":true"," filter",":NOTIFYMANAGER"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["trace enable",":true"," filter",":TXPOWPROCESSOR"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["trace enable",":false"]})})]}),"\n",(0,r.jsx)(e.h2,{id:"backup",children:"Backup"}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"archive"}),(0,r.jsx)("br",{}),"Perform a chain or seed re-sync from an archive node."]}),(0,r.jsx)(e.p,{children:"A chain re-sync will put your node on the correct chain so you are in sync with the latest tip block."}),(0,r.jsx)(e.p,{children:"Use a chain re-sync if your node has been offline for too long and cannot catchup. Seed Phrase is not required."}),(0,r.jsx)(e.p,{children:"A seed re-sync will wipe the wallet and re-generate your keys from your seed phrase. Your coins will be restored."}),(0,r.jsx)(e.p,{children:"Only use a seed re-sync if you have lost your node and do not have a backup."}),(0,r.jsx)(e.p,{children:"You can also check the integrity of your archive db."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"action:"})," ",(0,r.jsx)("br",{}),"\r\n\u2002   ",(0,r.jsx)(e.strong,{children:"resync"})," : do a resync. If you wish to perform a chain re-sync only, do not provide your 24 word seed phrase.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"integrity"})," : on an Archive node, check the integrity of your Archive db. No host required.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"export"})," : Export your archive db to a gzip file.",(0,r.jsx)("br",{}),"\r\n\u2002   ",(0,r.jsx)(e.strong,{children:"import"})," : do a chain or seed re-sync using an archive gzip file. Use with 'file'.",(0,r.jsx)("br",{}),"\r\n\u2002   ",(0,r.jsx)(e.strong,{children:"inspect"})," : inspect an archive export gzip file. If 'last:1' then the file can re-sync any node from genesis.",(0,r.jsx)("br",{}),"\r\n\u2002   ",(0,r.jsx)(e.strong,{children:"addresscheck"})," : check your archive db for spent and unspent coins at a specific address."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"host:"})," (optional)",(0,r.jsx)("br",{}),"\r\nip",":port"," of the archive node to sync from or check the integrity of.",(0,r.jsx)("br",{}),"\r\nUse 'auto' to connect to a default archive node."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"file:"})," (optional)",(0,r.jsx)("br",{}),"\r\nname or path of the archive export gzip file to export/import/inspect",(0,r.jsx)("br",{})]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"phrase:"})," (optional)",(0,r.jsx)("br",{}),"\r\nYour 24 word seed phrase in double quotes, to perform a seed re-sync. Use with action",":resync",".",(0,r.jsx)("br",{}),"\r\nThis will wipe the wallet of this node. You do NOT have to do this if you still have access to your wallet.\r\nIn this case, just do a re-sync without 'phrase' to get on the correct chain."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"keys:"})," (optional)",(0,r.jsx)("br",{}),"\r\nNumber of keys to create if you need to do a seed re-sync. Default is 64."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"keyuses:"})," (optional)",(0,r.jsx)("br",{}),"\r\nHow many times at most you used your keys.",(0,r.jsx)("br",{}),"\r\nEvery time you re-sync with seed phrase this needs to be higher as Minima Signatures are stateful.",(0,r.jsx)("br",{}),"\r\nDefaults to 1000 - the max is 262144 for normal keys."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"address:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe wallet address to check. Use with 'action",":addresscheck","'."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["archive action",":resync"," host:89.98.89.98:8888"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["archive action",":resync"," host",":auto",' phrase:"YOUR 24 WORD SEED PHRASE"']})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["archive action",":resync",' host:89.98.89.98:8888 phrase:"YOUR 24 WORD SEED PHRASE" keys:90 keyuses:2000']})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["archive action",":integrity"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["archive action",":export"," file",":archiveexport-ddmmyy",".gzip"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["archive action",":import"," file",":archiveexport-ddmmyy",".gzip"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["archive action",":inspect"," file",":archiveexport-ddmmyy",".gzip"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["archive action",":addresscheck"," address",":Mx",".."]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"backup"}),(0,r.jsx)("br",{}),"Backup your node. Uses a timestamped name by default."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"password:"})," (optional)",(0,r.jsx)("br",{}),"\r\nSet a password using letters and numbers only."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"file:"})," (optional)",(0,r.jsx)("br",{}),"\r\nSpecify a filename ending in .bak, optionally include a local path for the backup.\r\nDefault location for a backup is the Minima data folder."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"auto:"})," (optional)",(0,r.jsx)("br",{}),"\r\ntrue or false, true will schedule a non-password protected backup every 24 hours."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"maxhistory:"})," (optional)",(0,r.jsx)("br",{}),"\r\nMax relevant TxPoW to add - your history."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["backup password",":Longsecurepassword456"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["backup password",":Longsecurepassword456"," confirm",":Longsecurepassword456"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["backup password",":Longsecurepassword456"," file",":my-backup-01-Jan-22",".bak maxhistory:100"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["backup auto",":true"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"mysql"}),(0,r.jsx)("br",{}),"Export the archive data of your node to a MySQL database."]}),(0,r.jsx)(e.p,{children:"Export your archive data and coins data to a mysql database."}),(0,r.jsx)(e.p,{children:"The MySQL archive export (in .dat or .gzip format) can be used to perform a chain re-sync to put users on the correct chain or a seed re-sync to restore access to lost funds, using the 24 word seed phrase."}),(0,r.jsx)(e.p,{children:"Query an address for its history of spent and unspent coins."}),(0,r.jsx)(e.p,{children:"Additionally export the MySQL db to a .dat or .gzip file for resyncing with 'reset' or 'archive' command."}),(0,r.jsx)(e.p,{children:"You can also create a coins db in MySQL to search for coins using SQL queries."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"host:"}),(0,r.jsx)("br",{}),"\r\nThe ip",":port"," (or name of Docker container) running the MySQL db."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"database:"}),(0,r.jsx)("br",{}),"\r\nname of the MySQL db being used to store the archive db data."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"user:"}),(0,r.jsx)("br",{}),"\r\nMySQL user to login to as."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"password:"}),(0,r.jsx)("br",{}),"\r\nMySQL password for the user provided."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"readonly:"}),(0,r.jsx)("br",{}),"\r\ntrue or false, connect in readonly mode."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"action:"}),(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"info"})," : Show the blocks stored in the archive db and compare to the MySQL db.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"integrity"})," : Check the block order and block parents are correct in the MySQL db.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"update"})," : Update the MySQL db with the latest syncblocks from the node's archive db.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"addresscheck"})," : Check the history of all the spent and unspent coins from an address.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"autobackup"})," : Automatically save archive data to MySQL DB. Use with enable.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"resync"})," : Perform a chain or seed re-sync from the specified MySQL db. Will shutdown the node so you must restart it once complete.",(0,r.jsx)("br",{}),"\r\n\u2002   ",(0,r.jsx)(e.strong,{children:"wipe"})," :  Be careful. Wipe the MySQL db.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"h2export"})," : export the MySQL db to an archive gzip file which can be used to resync a node.\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"h2import"})," : import an archive gzip file to the MySQL db.\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"rawexport"})," : export the MySQL db to an archive .dat file which can be used to resync a node. (v1.0.39 onwards)"]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"phrase:"})," (optional)",(0,r.jsx)("br",{}),"\r\nUse with action",":resync",". The BIP39 seed phrase of the node to re-sync.",(0,r.jsx)("br",{}),"\r\nIf provided, the node will be wiped and re-synced.",(0,r.jsx)("br",{}),"\r\nIf not provided, the node will be re-synced to the chain and will not be wiped."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"keys:"})," (optional)",(0,r.jsx)("br",{}),"\r\nIf the seed phrase is provided, optionally set the number of keys to create.\r\nDefault is 80."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"keyuses:"})," (optional)",(0,r.jsx)("br",{}),"\r\nIf the seed phrase is provided, optionally set the number of previous uses for each key created.",(0,r.jsx)("br",{}),"\r\nDefault is 1000."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"address:"})," (optional)",(0,r.jsx)("br",{}),"\r\nUse with action",":checkaddress",". The address to check the history of spent and unspent coins for."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"enable:"})," (optional)",(0,r.jsx)("br",{}),"\r\nUse with action",":autobackup",". Automatically save data to MySQL archive DB."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["mysql host:mysqlhost",":port"," database",":archivedb"," user",":archiveuser"," password",":archivepassword"," action",":info"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["mysql host",":dockermysql"," database",":archivedb"," user",":archiveuser"," password",":archivepassword"," action",":info"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["mysql host:mysqlhost",":port"," database",":archivedb"," user",":archiveuser"," password",":archivepassword"," action",":integrity"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["mysql host:mysqlhost",":port"," database",":archivedb"," user",":archiveuser"," password",":archivepassword"," action",":update"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["mysql host:mysqlhost",":port"," database",":archivedb"," user",":archiveuser"," password",":archivepassword"," action",":addresscheck"," address",":MxG08",".."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["mysql host:mysqlhost",":port"," database",":archivedb"," user",":archiveuser"," password",":archivepassword"," action",":resync"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["mysql host:mysqlhost",":port"," database",":archivedb"," user",":archiveuser"," password",":archivepassword"," action",":resync",' phrase:"24 WORDS HERE" keys:90 keyuses:2000']})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"mysqlcoins"}),(0,r.jsx)("br",{}),"Create and search a coins database from your MySQL Archive."]}),(0,r.jsx)(e.p,{children:"Create a coins db from your mysql data and search it."}),(0,r.jsx)(e.p,{children:"Use the same database you already use for your TxBlocks. This creates a new table."}),(0,r.jsx)(e.p,{children:"You can then search for coins using SQL queries."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"host:"}),(0,r.jsx)("br",{}),"\r\nThe ip",":port"," (or name of Docker container) running the MySQL db."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"database:"}),(0,r.jsx)("br",{}),"\r\nname of the MySQL db being used to store the archive db data."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"user:"}),(0,r.jsx)("br",{}),"\r\nMySQL user to login to as."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"password:"}),(0,r.jsx)("br",{}),"\r\nMySQL password for the user provided."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"readonly:"}),"(optional) ",(0,r.jsx)("br",{}),"\r\ntrue or false, connect in readonly mode."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"logs:"})," (optional) ",(0,r.jsx)("br",{}),"\r\ntrue or false, show detailed logs, default true."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"action:"}),(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"info"})," : Get information about the Coins DB.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"update"})," : Update the coins db from the latest coin added with MySQL data. ",(0,r.jsx)("br",{}),"\r\n\u2002   ",(0,r.jsx)(e.strong,{children:"wipe"})," :  Wipe the Coins DB.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"search"})," : Perform a search on the data. You can specify any valid query params."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"maxcoins:"})," (optional) ",(0,r.jsx)("br",{}),"\r\nThe maximum number of coins to add. The update can take a VERY long time so this way you can limit it."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"where:"})," (optional) ",(0,r.jsx)("br",{}),"\r\nThe search criteria. String data MUST be in single quotes. You can use multiple parameters."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"query:"})," (optional)",(0,r.jsx)("br",{}),"\r\nthe full sql query"]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"address:"})," (optional)",(0,r.jsx)("br",{}),"\r\nthe address to check for"]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"spent:"})," (optional)",(0,r.jsx)("br",{}),"\r\ntrue or false, if the coin is spent or unspent"]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"limit:"})," (optional)",(0,r.jsx)("br",{}),"\r\nlimit the number of rows returned"]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsxs)(e.p,{children:["mysqlcoins action",":update"," maxcoins:100 host:127.0.0.1:3307 database",":coinsdb"," user",":myuser"," password",":myuser"]}),(0,r.jsxs)(e.p,{children:["mysqlcoins action",":search"," where:\"address='0x791E78C60652B0E19B8FE9EB035B122B261490C477FD76E38C0C928187076103'\" host:127.0.0.1:3307 database",":coinsdb"," user",":myuser"," password",":myuser"]}),(0,r.jsxs)(e.p,{children:["mysqlcoins action",":search"," query:\"address='0x791E78C60652B0E19B8FE9EB035B122B261490C477FD76E38C0C928187076103' AND state LIKE '%0xFFEEDD%' LIMIT 10\" host:127.0.0.1:3307 database",":coinsdb"," user",":myuser"," password",":myuser"]})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"reset"}),(0,r.jsx)("br",{}),"Reset your node in various ways. "]}),(0,r.jsx)(e.p,{children:"You MUST wait until all your original keys are created before this is allowed."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"archivefile:"})," ",(0,r.jsx)("br",{}),"\r\nSpecify the the archive ",(0,r.jsx)(e.strong,{children:".dat"})," or ",(0,r.jsx)(e.strong,{children:".gzip"})," file. Should be recently exported from an archive node."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"action:"})," ",(0,r.jsx)("br",{}),"\r\n\u2002   ",(0,r.jsx)(e.strong,{children:"chainsync"})," : Re-sync all blocks from the archivefile to get back onto the right chain. Seed phrase is not required, the private keys will remain unchanged. ",(0,r.jsx)("br",{}),"\r\n\u2002   ",(0,r.jsx)(e.strong,{children:"seedsync"})," : Wipe the wallet and re-generate your keys from your seed phrase. Your coins will be restored.",(0,r.jsx)("br",{}),"\r\n\u2002   ",(0,r.jsx)(e.strong,{children:"restore"})," : Restore a backup and re-sync the entire chain from the archivefile."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"file:"})," (optional) ",(0,r.jsx)("br",{}),"\r\nSpecify the filename or local path of the backup to restore"]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"password:"})," (optional) ",(0,r.jsx)("br",{}),"\r\nEnter the password of the backup"]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"phrase:"})," (optional)",(0,r.jsx)("br",{}),"\r\nYour 24 word seed phrase in double quotes, to import a seed phrase and sync the entire chain. Use with action",":seedsync",".",(0,r.jsx)("br",{}),"\r\nThis will wipe the wallet of this node. You do NOT have to do this if you still have access to your wallet.\r\nIn this case, just do a chainsync without 'phrase' to get on the correct chain."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"keys:"})," (optional)",(0,r.jsx)("br",{}),"\r\nNumber of keys to create if you need to do a seed re-sync. Default is 64."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"keyuses:"})," (optional)",(0,r.jsx)("br",{}),"\r\nHow many times at most you used your keys..",(0,r.jsx)("br",{}),"\r\nEvery time you re-sync with seed phrase this needs to be higher as Minima Signatures are stateful.",(0,r.jsx)("br",{}),"\r\nDefaults to 1000 - the max is 262144 for normal keys."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["reset archivefile",":archiveexport-jul23",".gz action",":chainsync"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["reset archivefile",":archiveexport-jul23",".gz action",":seedsync",' keyuses:1000 phrase:"ENTER 24 WORDS HERE"']})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["reset archivefile",":archiveexport-jul23",".gz action",":restore"," file",":backup-jul23",".bak password",":Longsecurepassword456"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"restore"}),(0,r.jsx)("br",{}),"Restore your node from a backup."]}),(0,r.jsx)(e.p,{children:"You MUST wait until all your original keys are created before this is allowed."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"file:"})," ",(0,r.jsx)("br",{}),"\r\nSpecify the filename or local path of the backup to restore"]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"password:"})," (optional)",(0,r.jsx)("br",{}),"\r\nEnter the password of the backup"]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["restore file",":my-full-backup-01-Jan-22"," password",":Longsecurepassword456"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"restoresync"}),(0,r.jsx)("br",{}),"Restore the entire system AND perform an archive chain sync. Use when the backup is old."]}),(0,r.jsx)(e.p,{children:"The node will be restored and an archive chain sync will commence from the last block in the backup."}),(0,r.jsx)(e.p,{children:"You MUST wait until all your original keys are created before this is allowed."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"file:"})," ",(0,r.jsx)("br",{}),"\r\nSpecify the filename or local path of the backup to restore"]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"password:"})," (optional)",(0,r.jsx)("br",{}),"\r\nEnter the password of the backup"]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"keyuses: (optional"}),")",(0,r.jsx)("br",{}),"\r\nIncrement (not set) the number of key uses per key."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["restoresync file",":my-full-backup-01-Jan-22"," password",":Longsecurepassword456"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["restoresync file",":my-full-backup-01-Jan-22"," password",":Longsecurepassword456"," keyuses:1000"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"vault"}),(0,r.jsx)("br",{})," View, encrypt/decrypt or wipe/restore your seed phrase and private keys."]}),(0,r.jsx)(e.p,{children:"DO NOT SHARE YOUR SEED PHRASE WITH ANYONE."}),(0,r.jsx)(e.p,{children:"BE CAREFUL. ENSURE YOU HAVE A BACKUP AND SECURE RECORD OF YOUR PASSPHRASE BEFORE LOCKING."}),(0,r.jsx)(e.p,{children:"You must have your passphrase to unlock your private keys."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"action:"})," (optional)",(0,r.jsx)("br",{}),"\r\n\u2002     ",(0,r.jsx)(e.strong,{children:"seed"})," : Show your seed phrase. The default.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"wipekeys"})," : Wipe your private keys - keep the public.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"restorekeys"})," : Restore your private keys.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"passwordlock"})," : Lock your node by password encrypting private keys.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"passwordunlock"})," : Unlock your node to reinstating your private keys.",(0,r.jsx)("br",{})]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"seed:"})," (optional)",(0,r.jsx)("br",{}),"\r\nEnter your seed to lock your node. This will delete your private keys."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"phrase:"})," (optional)",(0,r.jsx)("br",{}),"\r\nEnter your passphrase in double quotes to restore your node. This will reinstate your private keys."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"vault"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["vault action",":wipekeys"," seed:0xDD4E.."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["vault action",":restorekeys",' phrase:"SPRAY LAMP.."']})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["vault action",":passwordlock"," password",":your_password"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["vault action",":passwordlock"," password",":your_password"," confirm",":your_password"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["vault action",":passwordunlock"," password",":your_password"]})})]}),"\n",(0,r.jsx)(e.h2,{id:"minidapp-system",children:"MiniDapp System"}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"mds"}),(0,r.jsx)("br",{}),"MiniDAPP System management."]}),(0,r.jsx)(e.p,{children:"Install, update or uninstall MiniDapps and set their permissions to READ/WRITE. Default permission is READ."}),(0,r.jsx)(e.p,{children:"DO NOT give WRITE permissions to MiniDapps you do not trust!\r\nAccept/deny pending commands from MiniDapps with READ permissions."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"action:"})," (optional)",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"list"})," : List your installed MiniDapps. Default parameter.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"install"})," : Install a new MiniDapp and optionally set its permission. Must specify 'file'.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"update"})," : Update and replace an existing MiniDapp. Must specify MiniDapp 'uid' and 'file' of new MiniDapp.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"uninstall"})," : Uninstall a MiniDapp. Must specify MiniDapp 'uid'.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"pending"})," : List all pending commands waiting to be accepted or denied.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"accept"})," : Accept a pending command. Must specify 'uid' of the pending command.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"deny"})," : Deny a pending command. Must specify 'uid' of the pending command.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"permission"})," : Set permission for a MiniDapp to READ or WRITE. Must specify existing MiniDapp 'uid' and 'trust'."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"file:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe file name of the MiniDapp to install. Can either be in the Minima folder or specify the file path."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"uid"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe uid of the MiniDapp to update, uninstall."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"trust:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe ip",":port"," to send a message to. Use with 'action",":send","'."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"mds"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["mds action",":list"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["mds action",":install"," file",":wallet_1",".0.mds.zip"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["mds action",":install"," file:/Users/MyUser/Downloads/wallet_1.0.mds.zip trust",":write"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["mds action",":update"," uid:0xABA3.. file",":wallet_2",".0.mds.zip"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["mds action",":uninstall"," uid:0xABA3.."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["mds action",":pending"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["mds action",":accept"," uid:0xCDF6.."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["mds action",":deny"," uid:0xCDF6.."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["mds action",":permission"," uid:0xABA3.. trust",":write"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"checkmode"}),(0,r.jsx)("br",{}),"Show if this MiniDAPP is READ or WRITE mode"]}),(0,r.jsx)(e.p,{children:"Can be called from a MiniDapp to check whether it is in READ or WRITE mode."}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"checkmode"})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"checkpending"}),(0,r.jsx)("br",{}),"Show if a pending transaction UID is in the pending list"]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"checkpending uid:0xFF.."})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"checkrestore"}),(0,r.jsx)("br",{}),"Check if the system is restoring"]}),(0,r.jsx)(e.p,{children:"Check whether Minima is currently being restored, is shutting down and if shutdown is complete."}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"checkrestore"})})]}),"\n",(0,r.jsx)(e.h2,{id:"network",children:"Network"}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"connect"}),(0,r.jsx)("br",{}),"Connect to a network Minima instance."]}),(0,r.jsx)(e.p,{children:"Connect to another node to join the main network or to create a private test network."}),(0,r.jsx)(e.p,{children:"Set your own host using the -host parameter at start up."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"host:"}),(0,r.jsx)("br",{}),"\r\nThe external ip",":port"," of the node to connect to."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"connect host:94.0.239.117:9001"})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"disconnect"}),(0,r.jsx)("br",{}),"Disconnect from a connected or connecting host."]}),(0,r.jsx)(e.p,{children:"Optionally disconnect from all hosts."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"uid:"}),(0,r.jsx)("br",{}),"\r\nUse 'all' to disconnect from all hosts or enter the uid of the host to disconnect from.",(0,r.jsx)("br",{}),"\r\nuid can be found from the 'network' command."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["disconnect uid",":CVNPMLPOCQ0HQ"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["disconnect uid",":all"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"message"}),(0,r.jsx)("br",{}),"Send a message to one or all of your direct peers."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"data:"}),"\r\nThe message as a string."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"uid:"})," (optional)\r\nLeave blank to send a message to all peers or enter the uid of the peer to send the message to.\r\nuid can be found from the 'network' command."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:['message data:"hello" uid',":CVNPMLPOCQ0HQ"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"network"}),(0,r.jsx)("br",{}),"Show network status or reset traffic counter."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"action:"})," (optional)",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"list"})," : List the direct peers you are connected to. The default.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"reset"})," : Restart the traffic counter from 0.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"recalculateip"})," : Reset your IP - when you move to a different WiFi."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"network"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["network action",":list"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["network action",":reset"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["network action",":recalculateip"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"peers"}),(0,r.jsx)("br",{}),"Prints the peers list this node has. P2P must be enabled."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"action:"})," (optional)",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"list"})," : List your peers. The default.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"addpeers"})," : Add a list of new peers."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"peerslist:"})," (optional)",(0,r.jsx)("br",{}),"\r\nJSON array of new peers [ip",":port",",ip",":port",",..]"]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"peers"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["peers action",":list"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["peers action",":addpeers",' peerslist:["31.125.188.214:9001","94.0.239.117:9001"]']})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"ping"}),(0,r.jsx)("br",{}),"Ping a host and get back Minima Node info."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"ping host:"})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"rpc"}),(0,r.jsx)("br",{}),"Enable and disable RPC on port 9005 (default is off)."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"enable:"}),(0,r.jsx)("br",{}),"\r\ntrue or false, true to enable rpc or false to disable."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"ssl:"}),(0,r.jsx)("br",{}),"\r\ntrue or false, true to enable Self signed SSL - you can use stunnel yourself."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"password:"}),(0,r.jsx)("br",{}),"\r\nthe Basic Auth password used in headers - ONLY secure if used with SSL."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["rpc enable",":true"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["rpc enable",":true"," ssl",":true"," password",":minima"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["rpc enable",":true"," password",":minima"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["rpc enable",":false"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"webhooks"}),(0,r.jsx)("br",{}),"Add a web hook that is called with Minima events as they happen."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"action:"})," (optional)",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"list"})," : List your existing webhooks. The default.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"add"})," : Add a new webhook.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"remove"})," : Remove an existing webhook.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"clear"})," : Clear the existing webhooks."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"hook:"})," (optional)",(0,r.jsx)("br",{}),"\r\nA URL, must be a POST endpoint."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"filter:"})," (optional)",(0,r.jsx)("br",{}),"\r\nFilters which events get posted."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["webhooks action",":list"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["webhooks action",":add"," hook:",(0,r.jsx)(e.a,{href:"http://127.0.0.1/myapi.php",children:"http://127.0.0.1/myapi.php"})]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["webhooks action",":remove"," hook:",(0,r.jsx)(e.a,{href:"http://127.0.0.1/myapi.php",children:"http://127.0.0.1/myapi.php"})]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["webhooks action",":add"," hook:",(0,r.jsx)(e.a,{href:"http://127.0.0.1/myapi.php",children:"http://127.0.0.1/myapi.php"})," filter",":MINING"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["webhooks action",":clear"]})})]}),"\n",(0,r.jsx)(e.h2,{id:"maxima",children:"Maxima"}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"maxcontacts"}),(0,r.jsx)("br",{}),"Manage your Maxima contacts. List, refresh, add, remove or search contacts."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"action:"}),(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"list"})," : List your Maxima contacts to see their id, address details, MLS and if they are on the same chain.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"add"})," : Add a new contact. Use with the 'contact' parameter.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"remove"})," : Remove a Maxima contact. Will also remove you from their contacts. Use with the 'id' parameter.",(0,r.jsx)("br",{}),"\r\n\u2002    ",(0,r.jsx)(e.strong,{children:"search"})," : Search for a contact. Use with the 'id' or 'publickey' parameter."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"contact:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe Maxima contact address of another node. Can be found using the 'maxima' command."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"id:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe id of an existing contact to remove or search for."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"publickey:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe Maxima public key of an existing contact to remove or search for."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"maxcontacts"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxcontacts action",":list"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxcontacts action",":add"," contact",":MxG18H",".."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxcontacts action",":remove"," id:1"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxcontacts action",":search"," publickey:0x3081.."]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"maxcreate"}),(0,r.jsx)("br",{}),"Create a 128 bit RSA public and private key. "]}),(0,r.jsx)(e.p,{children:"You can use them with maxsign and maxverify."}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"maxcreate"})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"maxextra"}),(0,r.jsx)("br",{}),"Perform extra functions on Maxima."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"action:"}),(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"staticmls"})," : Set an unchanging Maxima Location Service (mls) host for yourself.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"addpermanent"})," : On your static mls node, add your Maxima public key to allow 'getaddress' requests from anyone.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"removepermanent"})," : On your static mls node, remove your Maxima public key to stop allowing 'getaddress' requests.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"listpermanent"})," : On your static mls node, list all public keys currently allowing public requests for their contact address.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"clearpermanent"})," : On your static mls node, remove ALL public keys currently allowing requests for their contact address.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"getaddress"})," : Request the current contact address of a permanently accessible user from their static mls host.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"mlsinfo"})," : List info about users using you as their mls and the public keys of their contacts.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"allowallcontacts"})," : If you have shared your permanent maxaddress, you can disable/enable users adding you as a contact.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"addallowed"})," : If 'allowallcontacts' is disabled, you can authorize specific users to add you as a contact. Stored in RAM.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"listallowed"})," : List all the public keys which are allowed to add you as a Maxima contact.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"clearallowed"})," : Remove the public keys of ALL users which are allowed to add you as a Maxima contact."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"publickey:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe Maxima public key of the user who wants to share their permanent maxaddress to be publicly contactable over Maxima.",(0,r.jsx)("br",{}),"\r\nOr the Maxima public key of a user who is allowed to add you as a contact."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"maxaddress:"})," (optional)",(0,r.jsx)("br",{}),"\r\nUsed with 'action",":getaddress","' to get the contact address of a user using their permanent maxaddress.",(0,r.jsx)("br",{}),"\r\nTheir maxaddress must be in the format MAX#pubkey#staticmls, with their public key and static mls host address."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"enable:"})," (optional)",(0,r.jsx)("br",{}),"\r\ntrue or false, use with 'action",":allowallcontacts","' to enable or disable all new contacts."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"host:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe 'p2pidentity' of a server node which is always online. Use with 'action",":staticmls","' to set the host of your static mls."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxextra action",":staticmls"," host",":Mx","...@34.190.784.3:9001"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxextra action",":staticmls"," host",":clear"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxextra action",":addpermanent"," publickey:0x3081.."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxextra action",":removepermanent"," publickey:0x3081.."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxextra action",":listpermanent"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxextra action",":clearpermanent"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxextra action",":getaddress"," maxaddress",":MAX","#0x3081..#Mx..@34.190.784.3:9001"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxextra action",":mlsinfo"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxextra action",":allowallcontacts"," enable",":false"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxextra action",":addallowed"," publickey:0x2451.."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxextra action",":listallowed"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxextra action",":clearallowed"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"maxima"}),(0,r.jsx)("br",{}),"Check your Maxima details, send a message/data."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"action:"}),(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"info"})," : Show your Maxima details - name, publickey, staticmls, mls, local identity, and contact address.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"setname"})," : Set your Maxima name so your contacts recognize you. Default 'noname'.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"hosts"})," : List your Maxima hosts and see their Maxima public key, contact address, last seen time, and if you are connected.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"send"})," : Send a message to a contact. Must specify 'id|to|publickey', 'application', and 'data' parameters.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"sendall"})," : Send a message to ALL your contacts. Must specify 'application' and 'data' parameters.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"refresh"})," : Refresh your contacts by sending them a network message.v"]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"name:"})," (optional)",(0,r.jsx)("br",{}),"\r\nSet your name. Use with 'action",":setname","'."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"id | to | publickey:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe id, contact address, or public key of the recipient of the message. Use with 'action",":send","'."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"application:"})," (optional)",(0,r.jsx)("br",{}),"\r\nA string that identifies which application should process the message. Use with 'action",":send","'."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"data:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe data to send. Can be HEX or a JSON object. Use with 'action",":send","'."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"poll:"})," (optional)",(0,r.jsx)("br",{}),"\r\ntrue or false, true will poll the send action until successful. Use with 'action",":send","'."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"delay:"})," (optional)",(0,r.jsx)("br",{}),"\r\nOnly used with poll or with sendall. Delay sending the message by this many milliseconds."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxima action",":info"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxima action",":setname"," name",":myname"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxima action",":hosts"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxima action",":send"," id:1 application",":appname"," data:0xFED5.."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxima action",":send"," to",":MxG18H",".. application",":appname"," data:0xFED5.."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxima action",":send"," publickey:0xCD34.. application:ip",":port"," data:0xFED5.. poll",":true"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["maxima action",":refresh"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"maxsign"}),(0,r.jsx)("br",{}),"Sign a piece of data with your Maxima ID."]}),(0,r.jsx)(e.p,{children:"Returns the signature of the data, signed with your Maxima private key or the specified key."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"data:"})," ",(0,r.jsx)("br",{}),"\r\nThe 0x HEX data to sign."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"privatekey:"})," (optional) ",(0,r.jsx)("br",{}),"\r\nThe 0x HEX data of the private key from maxcreate. Uses your Maxima ID otherwise."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"maxsign data:0xCD34.."})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"maxsign data:0xCD34.. privatekey:0x30819.."})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"maxverify"}),(0,r.jsx)("br",{}),"Verify data with a Maxima public key. Returns valid true or false."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"data:"})," ",(0,r.jsx)("br",{}),"\r\nThe 0x HEX data to verify the signature for."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"publickey:"})," ",(0,r.jsx)("br",{}),"\r\nThe Maxima public key of the signer."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"signature:"})," ",(0,r.jsx)("br",{}),"\r\nThe signature of the data."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"maxverify data:0xCD34.. publickey:0xFED5 signature:0x4827.."})})]}),"\n",(0,r.jsx)(e.h2,{id:"scripts",children:"Scripts"}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"newscript"}),(0,r.jsx)("br",{}),"Add a new custom script."]}),(0,r.jsx)(e.p,{children:"Track ALL coins with this script address or just ones with state variables relevant to you."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"script:"})," ",(0,r.jsx)("br",{}),"\r\nThe script to add to your node. Your node will then know about coins with this script address."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"trackall:"})," ",(0,r.jsx)("br",{}),"\r\ntrue or false, true will track all coins with this script address. false will only track coins with this script address that are relevant to you."]}),(0,r.jsxs)(e.p,{children:["**clean: ** (optional) ",(0,r.jsx)("br",{}),"\r\ntrue or false, true will clean the script to its minimal correct representation. Default is false."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["newscript trackall",":true",' script:"RETURN SIGNEDBY(0x1539..) AND SIGNEDBY(0xAD25..)"']})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["newscript trackall",":false",' script:"RETURN (@BLOCK GTE PREVSTATE(1) OR @COINAGE GTE PREVSTATE(4)) AND VERIFYOUT(@INPUT PREVSTATE(2) @AMOUNT @TOKENID FALSE)"']})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"removescript"}),(0,r.jsx)("br",{}),"Remove a custom script."]}),(0,r.jsx)(e.p,{children:"BE CAREFUL not to remove a script you need."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"address:"})," ",(0,r.jsx)("br",{}),"\r\nThe address of the script."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"removescript address:0xFFE678768CDE.."})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["removescript address",":MxFFE678768CDE",".."]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"runscript"}),(0,r.jsx)("br",{}),"Test run a script with predefined parameters without executing on chain."]}),(0,r.jsx)(e.p,{children:"Scripts will be auto cleaned for you."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"script:"})," ",(0,r.jsx)("br",{})," The script to run, surrounded by double quotes."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"state:"})," (optional) ",(0,r.jsx)("br",{})," State variable values to use when running the script. JSON object in the format {0",":value",",1",":value",",..}."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"prevstate:"})," (optional) ",(0,r.jsx)("br",{})," The previous state variable values (for the input coin) to use when running the script. JSON object in the format {0",":value",",1",":value",",..}."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"globals:"})," (optional) ",(0,r.jsx)("br",{})," The Global variable values to use when running the script. JSON object in the format {@GLOBAL",":value",",..}."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"signatures:"})," (optional) ",(0,r.jsx)("br",{}),"The signatures required for the script. JSON array."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"extrascripts:"})," (optional) ",(0,r.jsx)("br",{}),"Extra scripts required for MAST contracts. JSON object in the format {script",":proof",",..}."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:'runscript script:"RETURN SIGNEDBY(0xFF..) AND @BLOCK GT 100" globals:{"@BLOCK":"101"} signatures:["0xFF"]'})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:'runscript script:"LET st=STATE(99) LET ps=PREVSTATE(99) IF st EQ ps AND @COINAGE GT 20 AND SIGNEDBY(0xFF) THEN RETURN TRUE ELSEIF st GT ps AND SIGNEDBY(0xEE) THEN RETURN TRUE ENDIF" globals:{"@COINAGE":"23"} state:{"99":"0"} prevstate:{"99":"0"} signatures:["0xFF"]'})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:'runscript script:"MAST 0x0E3.." extrascripts:{"RETURN TRUE":"0x000.."}'})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"scripts"}),(0,r.jsx)("br",{}),"List all scripts or search for a script / basic address your node is tracking."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"address:"})," (optional)",(0,r.jsx)("br",{})," Script address or basic address to search for. Can be 0x or Mx address."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"scripts"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"scripts address:0xFED5.."})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["scripts address",":MxG087",".."]})})]}),"\n",(0,r.jsx)(n,{children:(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"tutorial"}),(0,r.jsx)("br",{}),"Show the complete Grammar for Minima KISSVM scripting."]})}),"\n",(0,r.jsx)(e.h2,{id:"search",children:"Search"}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"coins"}),(0,r.jsx)("br",{}),"Search for coins that are relevant to you or in the unpruned chain."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"relevant:"})," (optional)",(0,r.jsx)("br",{}),"\r\n\u2002\u2002\u2002true or false, true will only return coins you are tracking. ",(0,r.jsx)("br",{}),"\r\n\u2002\u2002\u2002false will search all coins in the unpruned chain. ",(0,r.jsx)("br",{}),"\r\n\u2002\u2002\u2002Default is false unless no other parameters are provided."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"sendable:"})," (optional)",(0,r.jsx)("br",{}),"\r\n\u2002\u2002\u2002true only, filter out coins that are not sendable, they might be locked in a contract.",(0,r.jsx)("br",{}),"\r\n\u2002\u2002\u2002Default is to return sendable and unsendable coins."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"coinid:"})," (optional)",(0,r.jsx)("br",{}),"\r\n\u2002\u2002\u2002A coinid, to search for a single coin."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"amount:"})," (optional)",(0,r.jsx)("br",{}),"\r\n\u2002\u2002\u2002The coin value to search for."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"address:"})," (optional)",(0,r.jsx)("br",{}),"\r\n\u2002\u2002\u2002Address of a coin to search for, could be a script address.\u2002Can be a 0x or Mx address."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"tokenid:"})," (optional)",(0,r.jsx)("br",{}),"\r\n\u2002\u2002\u2002A tokenid, to search for coins of a specific token. Minima is 0x00."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"checkmempool:"})," (optional)",(0,r.jsx)("br",{}),"\r\n\u2002\u2002\u2002Check if the coin is in the mempool."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"coinage:"})," (optional)",(0,r.jsx)("br",{}),"\r\n\u2002\u2002\u2002How old does the coin have to be."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"order:"})," (optional)",(0,r.jsx)("br",{}),"\r\n\u2002\u2002\u2002Order asc or desc (Ascending or Descending)."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"coins"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["coins relevant",":true"," sendable",":true"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["coins relevant",":true"," amount:10"]})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"coins coinid:0xEECD7.."})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["coins relevant",":true"," tokenid:0xFED5.."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["coins relevant",":true"," address:0xCEF6.. tokenid:0x00"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["coins relevant",":true"," address",":MxABC9",".."]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"history"}),(0,r.jsx)("br",{}),"Return all TxPoW relevant to you."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"max:"})," (optional)",(0,r.jsx)("br",{}),"\r\nMaximum number of TxPoW to retrieve."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"history max:20"})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"keys"}),(0,r.jsx)("br",{}),"Get a list of all your public keys or create a new key."]}),(0,r.jsx)(e.p,{children:"Each public key can be used for signing securely 262144 (64^3) times."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"action:"})," (optional)",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"list"})," : List your existing public keys. The default.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"checkkeys"})," : Checks if your Public and Private keys are correct.",(0,r.jsx)("br",{}),"\r\n\u2002 ",(0,r.jsx)(e.strong,{children:"new"})," : Create a new key pair."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"publickey:"})," (optional)",(0,r.jsx)("br",{}),"\r\nSearch for a specific public key."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"keys"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["keys action",":list"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["keys action",":checkkeys"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["keys action",":list"," publickey:0xFFEE56.."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["keys action",":new"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"tokens"}),(0,r.jsx)("br",{}),"List all tokens in the unpruned chain."]}),(0,r.jsx)(e.p,{children:"Optionally import or export tokens to share token data."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"tokenid:"})," (optional)",(0,r.jsx)("br",{}),"\r\n\u2002The tokenid of the token to search for or export."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"action:"})," (optional)",(0,r.jsx)("br",{}),"\r\n\u2002",(0,r.jsx)(e.strong,{children:"import"})," : List your existing public keys.",(0,r.jsx)("br",{}),"\r\n\u2002",(0,r.jsx)(e.strong,{children:"export"})," : Create a new key."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"data:"})," (optional)",(0,r.jsx)("br",{}),"\r\n\u2002The data of the token to import, generated from the export."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"tokens"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"tokens tokenid:0xFED5.."})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["tokens action",":export"," tokenid:0xFED5.."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["tokens action",":import"," data:0x000.."]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"txpow"}),(0,r.jsx)("br",{})," Search for a specific TxPoW in the unpruned chain or your mempool."]}),(0,r.jsx)(e.p,{children:"Search by txpowid, block or 0x / Mx address."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"txpowid:"})," (optional)",(0,r.jsx)("br",{}),"\r\ntxpowid of the TxPoW to search for."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"block:"})," (optional)",(0,r.jsx)("br",{}),"\r\nBlock number to search in. Must be in the unpruned chain."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"address:"})," (optional)",(0,r.jsx)("br",{}),"\r\n0x or Mx address. Search for TxPoWs containing this specific address."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"max:"})," (optional)",(0,r.jsx)("br",{}),"\r\nMax relevant TxPoW to retrieve."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"txpow txpowid:0x000.."})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"txpow block:200"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"txpow address:0xCEF6.."})})]}),"\n",(0,r.jsx)(e.h2,{id:"send",children:"Send"}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"multisig"}),(0,r.jsx)("br",{})," Create a multisig coin that can only be used in a txn signed by root OR n of m given public keys."]}),(0,r.jsx)(e.p,{children:"Provide your Vault password to temporarily decrypt the private keys when creating the coin or signing a transaction."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"action:"}),(0,r.jsx)("br",{}),"\r\n\u2002",(0,r.jsx)(e.strong,{children:"create"})," : create a new multisig coin.",(0,r.jsx)("br",{}),"\r\n\u2002",(0,r.jsx)(e.strong,{children:"getkey"})," : returns one of your default public keys to be provided when creating the coin.",(0,r.jsx)("br",{}),"\r\n\u2002",(0,r.jsx)(e.strong,{children:"list"})," : lists all existing multisig coins.",(0,r.jsx)("br",{}),"\r\n\u2002",(0,r.jsx)(e.strong,{children:"spend"})," : creates an unsigned transaction (.txn) file to spend a specified amount of a multisig coin.",(0,r.jsx)("br",{}),"\r\n\u2002",(0,r.jsx)(e.strong,{children:"sign"})," : signs a multisig transaction (.txn) file with the relevant public keys and outputs a new signed file.",(0,r.jsx)("br",{}),"\r\n\u2002",(0,r.jsx)(e.strong,{children:"post"})," : posts the transaction to the network, must be signed as required by the contract before posting.",(0,r.jsx)("br",{}),"\r\n\u2002",(0,r.jsx)(e.strong,{children:"view"})," : view the details of a multisig transaction file."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"id:"})," (optional)",(0,r.jsx)("br",{}),"\r\nCreate a multisig coin with an id or list by id. Should be unique. This cannot be retrieved later.\r\nThe id is hashed and stored as state variable 0."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"amount:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe amount to lock in the multisig coin or the amount to spend."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"publickeys:"})," (optional)",(0,r.jsx)("br",{}),'\r\nThe full list of public keys that can sign the multisig transaction, in the format ["pubkey1",..,"pubkeym"]']}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"root:"})," (optional)",(0,r.jsx)("br",{}),"\r\nA root public key which can spend the coin without passing the required signature threshold."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"required:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe minimum number of public keys from the list required to sign a txn which spends from the multisig."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"coinid:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe coinid of the multisig coin to spend. Alternatively, use the id."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"address:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe address to send the specified amount to."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"file:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe transaction (.txn) file to create, sign or post."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"password:"})," (optional)",(0,r.jsx)("br",{}),"\r\nVault password to decrypt the private keys. Use with action",":create"," and action",":sign"," if the node is password locked.\r\nKeys will be re-encrypted after."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["multisig action",":create",' id:2of3multisig amount:100 publickeys:["0xFED5..","0xABD6..","0xFD8B.."] required:2 password',":your_password"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["multisig action",":create",' id:3of3multisigroot amount:100 publickeys:["0xFED5..","0xABD6..","0xFD8B.."] required:3 root:0xFFE..']})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["multisig action",":list"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["multisig action",":list"," id:2of3multisig"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["multisig action",":spend"," id:3of3multisigroot amount:5 address:0xFF.."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["multisig action",":spend"," coinid:0x17EA.. amount:5 address:0xFF.. file",":multisig",".txn"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["multisig action",":sign"," file",":multispend_1673351592845",".txn"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["multisig action",":sign"," file",":multisig",".txn password",":your_password"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["multisig action",":view"," file",":multisig",".txn"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["multisig action",":post"," file",":signed_multispend_1673351592845",".txn"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["multisig action",":post"," file",":signed_multisig",".txn"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"send"}),(0,r.jsx)("br",{})," Send Minima or custom tokens to a wallet or custom script address."]}),(0,r.jsx)(e.p,{children:"Optionally, send to multiple addresses in one transaction; split UTxOs; add state variables or include a burn."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"address:"})," (optional)",(0,r.jsx)("br",{}),"\r\nA Minima 0x or Mx wallet address or custom script address. Must also specify amount."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"amount:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe amount of Minima or custom tokens to send to the specified address."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"multi:"})," (optional)",(0,r.jsx)("br",{}),'\r\nJSON Array listing addresses and amounts to send in one transaction.\r\nTakes the format ["address',":amount",'","address2',":amount2",'",..], with each set in double quotes.']}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"tokenid:"})," (optional)",(0,r.jsx)("br",{}),"\r\nIf sending a custom token, you must specify its tokenid. Defaults to Minima (0x00)."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"state:"})," (optional)",(0,r.jsx)("br",{}),'\r\nList of state variables, if sending coins to a script. A JSON object in the format {"port":"value",..}']}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"burn:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe amount of Minima to burn with this transaction."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"password:"})," (optional)",(0,r.jsx)("br",{}),"\r\nIf your Wallet is password locked, you can unlock it for this one transaction - then relock it."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"split:"})," (optional)",(0,r.jsx)("br",{}),"\r\nYou can set the number of coins the recipient will receive, between 1 and 20. Default is 1.",(0,r.jsx)("br",{}),"\r\nThe amount being sent will be split into multiple coins of equal value.",(0,r.jsx)("br",{}),"\r\nYou can split your own coins by sending to your own address.",(0,r.jsx)("br",{}),"\r\nUseful if you want to send multiple transactions without waiting for change to be confirmed."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"coinage:"})," (optional)\r\nHow old must the coins be in blocks."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"debug:"})," (optional)\r\ntrue or false, true will print more detailed logs."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"dryrun:"})," (optional)\r\ntrue or false, true will simulate the send transaction but not execute it."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"mine:"})," (optional)\r\ntrue or false - should you mine the transaction immediately."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"send address:0xFF.. amount:10"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"send address:0xFF.. amount:10 tokenid:0xFED5.. burn:0.1"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"send address:0xFF.. amount:10 split:5 burn:0.1"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:'send multi:["0xFF..:10","0xEE..:10","0xDD..:10"] split:20'})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:'send amount:1 address:0xFF.. state:{"0":"0xEE..","1":"0xDD.."}'})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"sendpoll"}),(0,r.jsx)("br",{})," Send function that adds 'send' commands to a list and polls every 30 seconds until the return status is 'true'."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"action:"})," (optional)",(0,r.jsx)("br",{}),"\r\n\u2002",(0,r.jsx)(e.strong,{children:"list"})," : list all the 'send' commands in the polling list.",(0,r.jsx)("br",{}),"\r\n\u2002",(0,r.jsx)(e.strong,{children:"remove"})," : remove a 'send' command from the polling list."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"uid:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe uid of a 'send' command you wish to remove from the polling list. Use with action",":remove","."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"sendpoll address:0xFF.. amount:10"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"sendpoll address:0xFF.. amount:10 tokenid:0xFED5.. burn:0.1"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["sendpoll action",":list"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["sendpoll action",":remove"," uid:0x.."]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"sendnosign"}),(0,r.jsx)("br",{})," Create a txn but don't sign it."]}),(0,r.jsx)(e.p,{children:"Constructs and outputs an unsigned transaction to a file in the base folder."}),(0,r.jsx)(e.p,{children:"The output .txn file can then be imported to an offline node for signing. Must be done from an online node as the MMR proofs for the input coins are added."}),(0,r.jsx)(e.p,{children:"Useful when the keys on an online node are wiped or password locked."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"address:"})," (optional)",(0,r.jsx)("br",{}),"\r\nA Minima 0x or Mx wallet address or custom script address. Must also specify amount."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"amount:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe amount of Minima or custom tokens to send to the specified address."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"multi:"})," (optional)",(0,r.jsx)("br",{}),"\r\nJSON Array listing addresses and amounts to send in one transaction. Takes the format [address",":amount",",address2",":amount2",",..], with each set in double quotes."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"tokenid:"})," (optional)",(0,r.jsx)("br",{}),"\r\nIf sending a custom token, you must specify its tokenid. Defaults to Minima (0x00)."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"state:"})," (optional)",(0,r.jsx)("br",{}),'\r\nList of state variables, if sending coins to a script. A JSON object in the format {"port":"value",..}']}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"burn:"})," (optional)",(0,r.jsx)("br",{}),"\r\nThe amount of Minima to burn with this transaction."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"split:"})," (optional)",(0,r.jsx)("br",{}),"\r\nSet the number of coins the recipient will receive, between 1 and 20. Default is 1. The amount being sent will be split into multiple coins of equal value. You can split your own coins by sending to your own address. Useful if you want to send multiple transactions without waiting for change to be confirmed."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"file:"})," (optional)",(0,r.jsx)("br",{}),"\r\nSpecify the file to output, otherwise default chosen."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"debug:"})," (optional)",(0,r.jsx)("br",{}),"\r\ntrue or false, true will print more detailed logs."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"sendnosign address:0xFF.. amount:10"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"sendnosign address:0xFF.. amount:10 tokenid:0xFED5.. burn:0.1"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"sendnosign address:0xFF.. amount:10 split:5 burn:0.1"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:'sendnosign multi:["0xFF..:10","0xEE..:10","0xDD..:10"] split:20'})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:'sendnosign amount:1 address:0xFF.. state:{"0":"0xEE..","1":"0xDD.."}'})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"sendsign"}),(0,r.jsx)("br",{}),"Sign a transaction previously created by the 'sendnosign' command, by specifying its .txn file."]}),(0,r.jsx)(e.p,{children:"Optionally, if the node is Vault password locked, provide the Vault password to decrypt the keys for signing."}),(0,r.jsx)(e.p,{children:"The keys will be automatically re-encrypted after signing."}),(0,r.jsx)(e.p,{children:"Can be signed on an offline node, then posted from an online node."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"file:"})," ",(0,r.jsx)("br",{})," Name of the unsigned transaction (.txn) file to sign, located in the node's base folder. If not in the base folder, specify the full file path."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"password:"})," ",(0,r.jsx)("br",{}),"The Vault password, if the node is password locked."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["sendsign file",":unsignedtransaction-1674907380057",".txn"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["sendsign file:C:\\Users\\unsignedtransaction-1674907380057.txn password",":your_vaultpassword"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"sendview"}),(0,r.jsx)("br",{}),"View a transaction (signed or unsigned)."]}),(0,r.jsx)(e.p,{children:"View the details of a transaction created by the 'sendnosign' command by specifying its .txn file."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"file:"})," ",(0,r.jsx)("br",{})," Name of the transaction (.txn) file to view, located in the node's base folder. If not in the base folder, specify the full file path."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["sendview file",":unsignedtransaction-1674907380057",".txn"]})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"sendview file:C:\\Users\\signedtransaction-1674907380057.txn"})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"sendpost"}),(0,r.jsx)("br",{}),"Post a transaction previously created and signed using the 'sendnosign' and 'sendsign' commands."]}),(0,r.jsx)(e.p,{children:"Post a transaction that was created and signed using the 'sendnosign' and 'sendsign' commands."}),(0,r.jsx)(e.p,{children:"Must be posted from an online node within approximately 24 hours of creation to ensure MMR proofs are valid."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"file:"})," ",(0,r.jsx)("br",{})," Name of the signed transaction (.txn) file to post, located in the node's base folder. If not in the base folder, specify the full file path."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["sendpost file",":signedtransaction-1674907380057",".txn"]})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"sendpost file:C:\\Users\\signedtransaction-1674907380057.txn"})})]}),"\n",(0,r.jsx)(e.h2,{id:"signatures",children:"Signatures"}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"sign"}),(0,r.jsx)("br",{})," Sign the data with the publickey."]}),(0,r.jsx)(e.p,{children:"Returns the signature of the data, signed with the corresponding private key."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"data:"}),(0,r.jsx)("br",{}),"\r\nThe 0x HEX data to sign."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"sign data:0xCD34.."})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"verify"}),(0,r.jsx)("br",{})," Verify a signature."]}),(0,r.jsx)(e.p,{children:"Returns valid true or false."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"data:"}),(0,r.jsx)("br",{}),"\r\nThe 0x HEX data to verify the signature for."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"publickey:"}),(0,r.jsx)("br",{}),"\r\nThe public key of the signer."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"signature:"}),(0,r.jsx)("br",{}),"\r\nThe signature of the data."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"verify data:0xCD34.. publickey:0xFED5 signature:0x4827.."})})]}),"\n",(0,r.jsx)(e.h2,{id:"transactions",children:"Transactions"}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"burn"}),(0,r.jsx)("br",{}),"View the latest Burn metrics"]}),(0,r.jsx)(e.p,{children:"View the number of burn transactions and the maximum, median, average and minimum burn metrics for the last 1, 10 and 50 blocks."}),(0,r.jsx)(e.p,{children:"Use as an indicator for an appropriate burn amount for transactions."}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"burn"})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"logs"}),(0,r.jsx)("br",{}),"Enable detailed logs for script errors or mining activity."]}),(0,r.jsx)(e.p,{children:"Enable detailed logs for script errors, mining activity, Maxima, network messages, blocks, or IBD processing."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"scripts:"})," (optional) ",(0,r.jsx)("br",{}),"true or false. Setting it to true turns on detailed logs for script errors."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"mining:"})," (optional) ",(0,r.jsx)("br",{}),"true or false. Setting it to true turns on detailed logs for mining start/end activity."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"maxima:"})," (optional) ",(0,r.jsx)("br",{}),"true or false. Setting it to true turns on detailed logs for Maxima."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"networking:"})," (optional) ",(0,r.jsx)("br",{}),"true or false. Setting it to true turns on detailed logs for Network Messages."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"blocks:"})," (optional) ",(0,r.jsx)("br",{}),"true or false. Setting it to true turns on detailed logs for Blocks."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"ibd:"})," (optional) ",(0,r.jsx)("br",{}),"true or false. Setting it to true turns on detailed logs for IBD processing."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["logs scripts",":true"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["logs scripts",":false"," mining",":true"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"txnbasics"}),(0,r.jsx)("br",{}),"Automatically set the MMR proofs and scripts for a transaction."]}),(0,r.jsx)(e.p,{children:"Only run this command when a transaction is ready to be posted."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"id:"})," ",(0,r.jsx)("br",{})," The ID of the transaction."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txnbasics id",":simpletxn"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"txncheck"}),(0,r.jsx)("br",{}),"Show details about the transaction."]}),(0,r.jsx)(e.p,{children:"Verify whether the inputs, outputs, signatures, proofs, and scripts are valid."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"id:"})," (optional) ",(0,r.jsx)("br",{})," The ID of the transaction to check."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txncheck id",":multisig"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"txnclear"}),(0,r.jsx)("br",{}),"Clear ALL the Witness data for a transaction."]}),(0,r.jsx)(e.p,{children:"Clears signatures, mmr proofs and script proofs."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"id:"})," ",(0,r.jsx)("br",{})," The ID of the transaction to clear."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txnclear id",":multisig"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"txncreate"}),(0,r.jsx)("br",{}),"Create a custom transaction."]}),(0,r.jsx)(e.p,{children:"The first step before defining the inputs and outputs."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"id:"})," ",(0,r.jsx)("br",{}),"Create an ID for the transaction."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txncreate id",":multisig"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"txndelete"}),(0,r.jsx)("br",{}),"Delete a previously created custom transaction."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"id:"})," ",(0,r.jsx)("br",{}),"The ID of the transaction to delete."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txndelete id",":multisig"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"txnexport"}),(0,r.jsx)("br",{}),"Export a transaction as HEX or to a file."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"id:"})," ",(0,r.jsx)("br",{}),"The ID of the transaction to export."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"file:"})," (optional) ",(0,r.jsx)("br",{}),"File name/path to export the transaction to, must use the .txn extension."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txnexport id",":simpletxn"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txnexport id",":multisig"," file",":multisig",".txn"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"txnimport"}),(0,r.jsx)("br",{}),"Import a transaction from previously exported HEX data or a .txn file."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"id:"})," (optional) ",(0,r.jsx)("br",{}),"Choose an ID for the transaction you are importing."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"file:"})," (optional) ",(0,r.jsx)("br",{}),"File name/path to the previously exported .txn file."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"data:"})," (optional) ",(0,r.jsx)("br",{}),"HEX data of the previously exported transaction."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"txnimport data:0x0000.."})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txnimport id",":simpletxn"," data:0x0000.."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txnimport id",":multisig"," file",":multisig",".txn"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"txninput"}),(0,r.jsx)("br",{}),"Add a coin as an input to a transaction."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"id:"})," ",(0,r.jsx)("br",{}),"The id of the transaction to add an input to."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"coinid:"}),"  (optional) ",(0,r.jsx)("br",{})," The id of the coin to add as an input."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"coindata:"}),"  (optional) ",(0,r.jsx)("br",{})," The data of the coin to add, instead of coinid. Can be from the 'coinexport' command or 'outputcoindata' from another transaction."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"floating:"}),"  (optional) ",(0,r.jsx)("br",{})," true or false, true will add an unspecified, floating ELTOO coin as an input. If true, also specify address, amount, tokenid. If false, specify a coinid or coindata."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"address:"}),"  (optional) ",(0,r.jsx)("br",{})," Coin address to use for the floating input. Can be 0x or Mx address."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"amount:"}),"  (optional) ",(0,r.jsx)("br",{})," Amount of a coin for the floating input."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"tokenid:"}),"  (optional) ",(0,r.jsx)("br",{})," tokenid of a coin for the floating input."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"scriptmmr:"}),"  (optional) ",(0,r.jsx)("br",{})," true or false, true will add the scripts and MMR proof for the coin."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txninput id",":simpletxn"," coinid:0xD0BF.."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txninput id",":multisig"," coinid:0xD0BF.. scriptmmr",":true"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txninput id",":posttxn"," coindata:0x000.."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txninput id",":eltootxn"," floating",":true"," address:0xFED5.. amount:10 tokenid:0x00"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"txnlist"}),(0,r.jsx)("br",{}),"List your custom transactions. Includes previously posted transactions."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"id:"})," (optional) ",(0,r.jsx)("br",{}),"The id of a single transaction to list."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"txnlist"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txnlist id",":multisig"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"txnoutput"}),(0,r.jsx)("br",{}),"Create a transaction output."]}),(0,r.jsx)(e.p,{children:"This will create a new coin (UTxO)."}),(0,r.jsx)(e.p,{children:"If the sum of inputs > outputs, the difference will be burned unless change to the sender is defined as an output."}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"id:"}),"  ",(0,r.jsx)("br",{})," The id of the transaction to add an output to."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"amount:"}),"  ",(0,r.jsx)("br",{})," The amount for the output. To send to the specified address."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"address:"})," Address of the recipient/script to send the output to. Can be 0x or Mx address."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"tokenid:"}),"  (optional) ",(0,r.jsx)("br",{})," tokenid of the output. Default is Minima (0x00)."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"storestate:"}),"  (optional) ",(0,r.jsx)("br",{})," true or false, true will keep the state variables of the transaction in the newly created output coin. Default is true."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txnoutput id",":simpletxn"," amount:10 address:0xFED5.."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txnoutput id",":multisig"," amount:10 address:0xFED5.. tokenid:0xCEF5.. storestate",":false"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txnoutput id",":eltootxn"," amount:10 address:0xFED5.."]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"txnscript"}),(0,r.jsx)("br",{}),"Add scripts to a transaction."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"id:"})," ",(0,r.jsx)("br",{}),"The id of the transaction."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"scripts:"})," ",(0,r.jsx)("br",{}),"JSON holds the script and the proof in the format {script",":proof","}"]}),(0,r.jsx)(e.p,{children:"If it is a single script, and not one created with mmrcreate, leave the proof blank."}),(0,r.jsx)(e.p,{children:"If it is an mmrcreate script, include the proof."}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txnscript id",":txnmast",' scripts:{"RETURN TRUE":""}']})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txnscript id",":txnmast",' scripts:{"RETURN TRUE":"0x000.."}']})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"txnsign"}),(0,r.jsx)("br",{}),"Sign a transaction."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"id:"}),"  ",(0,r.jsx)("br",{})," The id of the transaction to sign."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"publickey:"}),"  ",(0,r.jsx)("br",{})," The public key specified in a custom script, or 'auto' for transactions with simple inputs."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"txnpostauto:"}),"  (optional) ",(0,r.jsx)("br",{})," Do you want to post this transaction. Use the same values as you would for txnpost auto (sort MMR and Scripts)."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"txnpostburn:"}),"  (optional) ",(0,r.jsx)("br",{})," If you also post this transaction, do you want to add a burn transaction."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"txnpostmine:"}),"  (optional) ",(0,r.jsx)("br",{})," If you also post this transaction, do you want to mine it immediately."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"txndelete:"}),"  (optional) ",(0,r.jsx)("br",{})," true or false - delete this txn after signing AND posting."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txnsign id",":simpletxn"," publickey",":auto"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txnsign id",":simpletxn"," publickey",":auto"," password",":your_password"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txnsign id",":multisig"," publickey:0xFD8B.."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txnsign id",":simpletxn"," publickey",":auto"," txnpostauto",":true"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"txnstate"}),(0,r.jsx)("br",{}),"Add a state variable to a transaction."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"id:"})," ",(0,r.jsx)("br",{})," The id of the transaction."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"port:"})," ",(0,r.jsx)("br",{}),"Port number of the state variable, from 0-255."]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"value:"})," ",(0,r.jsx)("br",{}),"Value for the state variable."]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txnstate id",":multisig"," port:0 value:0xFED5.."]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txnstate id",":multisig"," port:1 value:100"]})}),(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["txnstate id",":multisig",' port:1 value:"string"']})})]})]})}function h(s={}){const{wrapper:e}={...(0,i.a)(),...s.components};return e?(0,r.jsx)(e,{...s,children:(0,r.jsx)(c,{...s})}):c(s)}},1151:(s,e,n)=>{n.d(e,{Z:()=>a,a:()=>o});var r=n(7294);const i={},t=r.createContext(i);function o(s){const e=r.useContext(t);return r.useMemo((function(){return"function"==typeof s?s(e):{...e,...s}}),[e,s])}function a(s){let e;return e=s.disableParentContext?"function"==typeof s.components?s.components(i):s.components||i:o(s.components),r.createElement(t.Provider,{value:e},s.children)}}}]);